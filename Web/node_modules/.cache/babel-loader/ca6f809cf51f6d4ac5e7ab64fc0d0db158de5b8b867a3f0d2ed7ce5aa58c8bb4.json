{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sanga\\\\Desktop\\\\App\\\\Web\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport toast from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  loading: true,\n  error: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'AUTH_START':\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case 'AUTH_SUCCESS':\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n        error: null\n      };\n    case 'AUTH_FAILURE':\n      return {\n        ...state,\n        user: null,\n        loading: false,\n        error: action.payload\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        loading: false,\n        error: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: {\n          ...state.user,\n          ...action.payload\n        }\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  // Check if user is logged in on app start\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const response = await authAPI.getProfile();\n          dispatch({\n            type: 'AUTH_SUCCESS',\n            payload: response.data.user\n          });\n        } catch (error) {\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'AUTH_FAILURE',\n            payload: error.message\n          });\n        }\n      } else {\n        dispatch({\n          type: 'AUTH_FAILURE',\n          payload: null\n        });\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.login(email, password);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: user\n      });\n      toast.success('Login successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      dispatch({\n        type: 'AUTH_START'\n      });\n      const response = await authAPI.register(userData);\n      const {\n        token,\n        user\n      } = response.data;\n      localStorage.setItem('token', token);\n      dispatch({\n        type: 'AUTH_SUCCESS',\n        payload: user\n      });\n      toast.success('Registration successful!');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed';\n      dispatch({\n        type: 'AUTH_FAILURE',\n        payload: message\n      });\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n    toast.success('Logged out successfully');\n  };\n  const updateProfile = async profileData => {\n    try {\n      const response = await authAPI.updateProfile(profileData);\n      dispatch({\n        type: 'UPDATE_USER',\n        payload: response.data.user\n      });\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const changePassword = async (currentPassword, newPassword) => {\n    try {\n      await authAPI.changePassword(currentPassword, newPassword);\n      toast.success('Password changed successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      const message = ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Password change failed';\n      toast.error(message);\n      return {\n        success: false,\n        error: message\n      };\n    }\n  };\n  const value = {\n    ...state,\n    login,\n    register,\n    logout,\n    updateProfile,\n    changePassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","authAPI","toast","jsxDEV","_jsxDEV","AuthContext","initialState","user","loading","error","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","checkAuth","token","localStorage","getItem","response","getProfile","data","removeItem","message","login","email","password","setItem","success","_error$response","_error$response$data","register","userData","_error$response2","_error$response2$data","logout","updateProfile","profileData","_error$response3","_error$response3$data","changePassword","currentPassword","newPassword","_error$response4","_error$response4$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/sanga/Desktop/App/Web/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst initialState = {\r\n  user: null,\r\n  loading: true,\r\n  error: null\r\n};\r\n\r\nconst authReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'AUTH_START':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    case 'AUTH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'AUTH_FAILURE':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    case 'UPDATE_USER':\r\n      return {\r\n        ...state,\r\n        user: { ...state.user, ...action.payload }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(authReducer, initialState);\r\n\r\n  // Check if user is logged in on app start\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      const token = localStorage.getItem('token');\r\n      if (token) {\r\n        try {\r\n          const response = await authAPI.getProfile();\r\n          dispatch({ type: 'AUTH_SUCCESS', payload: response.data.user });\r\n        } catch (error) {\r\n          localStorage.removeItem('token');\r\n          dispatch({ type: 'AUTH_FAILURE', payload: error.message });\r\n        }\r\n      } else {\r\n        dispatch({ type: 'AUTH_FAILURE', payload: null });\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email, password) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      const response = await authAPI.login(email, password);\r\n      \r\n      const { token, user } = response.data;\r\n      localStorage.setItem('token', token);\r\n      \r\n      dispatch({ type: 'AUTH_SUCCESS', payload: user });\r\n      toast.success('Login successful!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Login failed';\r\n      dispatch({ type: 'AUTH_FAILURE', payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      dispatch({ type: 'AUTH_START' });\r\n      const response = await authAPI.register(userData);\r\n      \r\n      const { token, user } = response.data;\r\n      localStorage.setItem('token', token);\r\n      \r\n      dispatch({ type: 'AUTH_SUCCESS', payload: user });\r\n      toast.success('Registration successful!');\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Registration failed';\r\n      dispatch({ type: 'AUTH_FAILURE', payload: message });\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    dispatch({ type: 'LOGOUT' });\r\n    toast.success('Logged out successfully');\r\n  };\r\n\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      const response = await authAPI.updateProfile(profileData);\r\n      dispatch({ type: 'UPDATE_USER', payload: response.data.user });\r\n      toast.success('Profile updated successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Profile update failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const changePassword = async (currentPassword, newPassword) => {\r\n    try {\r\n      await authAPI.changePassword(currentPassword, newPassword);\r\n      toast.success('Password changed successfully');\r\n      return { success: true };\r\n    } catch (error) {\r\n      const message = error.response?.data?.message || 'Password change failed';\r\n      toast.error(message);\r\n      return { success: false, error: message };\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    ...state,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    changePassword\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC/E,SAASC,OAAO,QAAQ,iBAAiB;AACzC,OAAOC,KAAK,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,MAAMS,YAAY,GAAG;EACnBC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,IAAI;EACbC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,YAAY;MACf,OAAO;QACL,GAAGF,KAAK;QACRH,OAAO,EAAE,IAAI;QACbC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRJ,IAAI,EAAEK,MAAM,CAACE,OAAO;QACpBN,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,cAAc;MACjB,OAAO;QACL,GAAGE,KAAK;QACRJ,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAEG,MAAM,CAACE;MAChB,CAAC;IACH,KAAK,QAAQ;MACX,OAAO;QACL,GAAGH,KAAK;QACRJ,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE;MACT,CAAC;IACH,KAAK,aAAa;MAChB,OAAO;QACL,GAAGE,KAAK;QACRJ,IAAI,EAAE;UAAE,GAAGI,KAAK,CAACJ,IAAI;UAAE,GAAGK,MAAM,CAACE;QAAQ;MAC3C,CAAC;IACH;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACN,KAAK,EAAEO,QAAQ,CAAC,GAAGnB,UAAU,CAACW,WAAW,EAAEJ,YAAY,CAAC;;EAE/D;EACAN,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACT,IAAI;UACF,MAAMG,QAAQ,GAAG,MAAMtB,OAAO,CAACuB,UAAU,CAAC,CAAC;UAC3CN,QAAQ,CAAC;YAAEL,IAAI,EAAE,cAAc;YAAEC,OAAO,EAAES,QAAQ,CAACE,IAAI,CAAClB;UAAK,CAAC,CAAC;QACjE,CAAC,CAAC,OAAOE,KAAK,EAAE;UACdY,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;UAChCR,QAAQ,CAAC;YAAEL,IAAI,EAAE,cAAc;YAAEC,OAAO,EAAEL,KAAK,CAACkB;UAAQ,CAAC,CAAC;QAC5D;MACF,CAAC,MAAM;QACLT,QAAQ,CAAC;UAAEL,IAAI,EAAE,cAAc;UAAEC,OAAO,EAAE;QAAK,CAAC,CAAC;MACnD;IACF,CAAC;IAEDK,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACFZ,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAa,CAAC,CAAC;MAChC,MAAMU,QAAQ,GAAG,MAAMtB,OAAO,CAAC2B,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MAErD,MAAM;QAAEV,KAAK;QAAEb;MAAK,CAAC,GAAGgB,QAAQ,CAACE,IAAI;MACrCJ,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;MAEpCF,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEP;MAAK,CAAC,CAAC;MACjDL,KAAK,CAAC8B,OAAO,CAAC,mBAAmB,CAAC;MAElC,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOvB,KAAK,EAAE;MAAA,IAAAwB,eAAA,EAAAC,oBAAA;MACd,MAAMP,OAAO,GAAG,EAAAM,eAAA,GAAAxB,KAAK,CAACc,QAAQ,cAAAU,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBR,IAAI,cAAAS,oBAAA,uBAApBA,oBAAA,CAAsBP,OAAO,KAAI,cAAc;MAC/DT,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEa;MAAQ,CAAC,CAAC;MACpDzB,KAAK,CAACO,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEK,OAAO,EAAE,KAAK;QAAEvB,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACFlB,QAAQ,CAAC;QAAEL,IAAI,EAAE;MAAa,CAAC,CAAC;MAChC,MAAMU,QAAQ,GAAG,MAAMtB,OAAO,CAACkC,QAAQ,CAACC,QAAQ,CAAC;MAEjD,MAAM;QAAEhB,KAAK;QAAEb;MAAK,CAAC,GAAGgB,QAAQ,CAACE,IAAI;MACrCJ,YAAY,CAACU,OAAO,CAAC,OAAO,EAAEX,KAAK,CAAC;MAEpCF,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEP;MAAK,CAAC,CAAC;MACjDL,KAAK,CAAC8B,OAAO,CAAC,0BAA0B,CAAC;MAEzC,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOvB,KAAK,EAAE;MAAA,IAAA4B,gBAAA,EAAAC,qBAAA;MACd,MAAMX,OAAO,GAAG,EAAAU,gBAAA,GAAA5B,KAAK,CAACc,QAAQ,cAAAc,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBZ,IAAI,cAAAa,qBAAA,uBAApBA,qBAAA,CAAsBX,OAAO,KAAI,qBAAqB;MACtET,QAAQ,CAAC;QAAEL,IAAI,EAAE,cAAc;QAAEC,OAAO,EAAEa;MAAQ,CAAC,CAAC;MACpDzB,KAAK,CAACO,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEK,OAAO,EAAE,KAAK;QAAEvB,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMY,MAAM,GAAGA,CAAA,KAAM;IACnBlB,YAAY,CAACK,UAAU,CAAC,OAAO,CAAC;IAChCR,QAAQ,CAAC;MAAEL,IAAI,EAAE;IAAS,CAAC,CAAC;IAC5BX,KAAK,CAAC8B,OAAO,CAAC,yBAAyB,CAAC;EAC1C,CAAC;EAED,MAAMQ,aAAa,GAAG,MAAOC,WAAW,IAAK;IAC3C,IAAI;MACF,MAAMlB,QAAQ,GAAG,MAAMtB,OAAO,CAACuC,aAAa,CAACC,WAAW,CAAC;MACzDvB,QAAQ,CAAC;QAAEL,IAAI,EAAE,aAAa;QAAEC,OAAO,EAAES,QAAQ,CAACE,IAAI,CAAClB;MAAK,CAAC,CAAC;MAC9DL,KAAK,CAAC8B,OAAO,CAAC,8BAA8B,CAAC;MAC7C,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOvB,KAAK,EAAE;MAAA,IAAAiC,gBAAA,EAAAC,qBAAA;MACd,MAAMhB,OAAO,GAAG,EAAAe,gBAAA,GAAAjC,KAAK,CAACc,QAAQ,cAAAmB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBjB,IAAI,cAAAkB,qBAAA,uBAApBA,qBAAA,CAAsBhB,OAAO,KAAI,uBAAuB;MACxEzB,KAAK,CAACO,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEK,OAAO,EAAE,KAAK;QAAEvB,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMiB,cAAc,GAAG,MAAAA,CAAOC,eAAe,EAAEC,WAAW,KAAK;IAC7D,IAAI;MACF,MAAM7C,OAAO,CAAC2C,cAAc,CAACC,eAAe,EAAEC,WAAW,CAAC;MAC1D5C,KAAK,CAAC8B,OAAO,CAAC,+BAA+B,CAAC;MAC9C,OAAO;QAAEA,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOvB,KAAK,EAAE;MAAA,IAAAsC,gBAAA,EAAAC,qBAAA;MACd,MAAMrB,OAAO,GAAG,EAAAoB,gBAAA,GAAAtC,KAAK,CAACc,QAAQ,cAAAwB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBtB,IAAI,cAAAuB,qBAAA,uBAApBA,qBAAA,CAAsBrB,OAAO,KAAI,wBAAwB;MACzEzB,KAAK,CAACO,KAAK,CAACkB,OAAO,CAAC;MACpB,OAAO;QAAEK,OAAO,EAAE,KAAK;QAAEvB,KAAK,EAAEkB;MAAQ,CAAC;IAC3C;EACF,CAAC;EAED,MAAMsB,KAAK,GAAG;IACZ,GAAGtC,KAAK;IACRiB,KAAK;IACLO,QAAQ;IACRI,MAAM;IACNC,aAAa;IACbI;EACF,CAAC;EAED,oBACExC,OAAA,CAACC,WAAW,CAAC6C,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAjC,QAAA,EAChCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACrC,EAAA,CA5GWF,YAAY;AAAAwC,EAAA,GAAZxC,YAAY;AA8GzB,OAAO,MAAMyC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAMC,OAAO,GAAG5D,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACqD,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
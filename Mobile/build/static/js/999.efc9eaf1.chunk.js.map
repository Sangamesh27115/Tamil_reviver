{"version":3,"file":"static/js/999.efc9eaf1.chunk.js","mappings":"sMAKA,MAAMA,EAAQ,CACZ,CAAEC,IAAK,QAASC,MAAO,aAAcC,YAAa,4BAA6BC,MAAO,iCACtF,CAAEH,IAAK,cAAeC,MAAO,qBAAsBC,YAAa,6BAA8BC,MAAO,gCACrG,CAAEH,IAAK,MAAOC,MAAO,WAAYC,YAAa,4BAA6BC,MAAO,8BAyCpF,EAtCsBC,KACpB,MAAMC,GAAWC,EAAAA,EAAAA,OACX,UAAEC,EAAS,QAAEC,IAAYC,EAAAA,EAAAA,KAW/B,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,mCAAkCC,SAAC,mBACjDC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,wCAAuCC,SACnDb,EAAMe,IAAI,CAACC,EAAGC,KACbN,EAAAA,EAAAA,MAACO,EAAAA,EAAOC,OAAM,CAEZC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,MAAO,GAAMR,GAC3BS,WAAY,CAAEC,MAAO,MACrBC,SAAU,CAAED,MAAO,KACnBE,QAASA,IArBCC,WAClB,UACQtB,EAAU,CAAEuB,aAClBzB,EAAS,QACX,CAAE,MAAO0B,GACP,GAgBqBC,CAAYjB,EAAEf,KAC7BiC,SAAUzB,EACVG,UAAS,wDAAAuB,OAA0DnB,EAAEZ,MAAK,kCAAiCS,SAAA,EAE3GC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,wBAAuBC,SAAEG,EAAEd,SACzCY,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAEG,EAAEb,gBAXhCa,EAAEf,W","sources":["pages/GameSelection.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useGame } from '../contexts/GameContext';\r\n\r\nconst games = [\r\n  { key: 'match', title: 'Match Game', description: 'Match words with meanings', color: 'from-green-400 to-emerald-500' },\r\n  { key: 'fill_blanks', title: 'Fill in the Blanks', description: 'Complete the missing words', color: 'from-orange-400 to-amber-500' },\r\n  { key: 'mcq', title: 'MCQ Game', description: 'Choose the correct answer', color: 'from-blue-400 to-cyan-500' },\r\n];\r\n\r\nconst GameSelection = () => {\r\n  const navigate = useNavigate();\r\n  const { startGame, loading } = useGame();\r\n\r\n  const handleStart = async (gameType) => {\r\n    try {\r\n      await startGame({ gameType });\r\n      navigate('/game');\r\n    } catch (e) {\r\n      // error toast handled in context\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-8\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800\">Choose a Game</h1>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {games.map((g, idx) => (\r\n          <motion.button\r\n            key={g.key}\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.1 * idx }}\r\n            whileHover={{ scale: 1.03 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            onClick={() => handleStart(g.key)}\r\n            disabled={loading}\r\n            className={`text-left p-6 rounded-xl text-white bg-gradient-to-r ${g.color} shadow-md disabled:opacity-70`}\r\n          >\r\n            <h3 className=\"text-xl font-semibold\">{g.title}</h3>\r\n            <p className=\"text-white/90 mt-2\">{g.description}</p>\r\n          </motion.button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameSelection;\r\n\r\n\r\n"],"names":["games","key","title","description","color","GameSelection","navigate","useNavigate","startGame","loading","useGame","_jsxs","className","children","_jsx","map","g","idx","motion","button","initial","opacity","y","animate","transition","delay","whileHover","scale","whileTap","onClick","async","gameType","e","handleStart","disabled","concat"],"sourceRoot":""}
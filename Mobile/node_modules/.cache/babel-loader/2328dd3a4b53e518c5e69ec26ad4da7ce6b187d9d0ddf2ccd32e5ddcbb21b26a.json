{"ast":null,"code":"import axios from 'axios';\n\n// Base configuration\nconst BASE_URL = 'http://10.0.2.2:3000/api'; // For Android emulator\n// const BASE_URL = 'http://localhost:3000/api'; // For iOS simulator\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  // Token will be added by individual API calls\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Handle unauthorized access\n    console.log('Unauthorized access - token may be expired');\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: async (email, password) => {\n    return api.post('/auth/login', {\n      email,\n      password\n    });\n  },\n  register: async (username, email, password) => {\n    return api.post('/auth/register', {\n      username,\n      email,\n      password\n    });\n  }\n};\n\n// Game API\nexport const gameAPI = {\n  startGame: async (gameConfig, token) => {\n    return api.post('/game/start-game', gameConfig, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  submitAnswer: async (sessionId, questionId, answer, timeSpent, token) => {\n    return api.post('/game/submit-answer', {\n      sessionId,\n      questionId,\n      answer,\n      timeSpent\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  completeGame: async (sessionId, token) => {\n    return api.post('/game/complete-game', {\n      sessionId\n    }, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  getGameHistory: async (page, limit, gameType, token) => {\n    const params = new URLSearchParams({\n      page,\n      limit\n    });\n    if (gameType) params.append('gameType', gameType);\n    return api.get(`/game/history?${params}`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  getLeaderboard: async (limit = 10) => {\n    return api.get(`/game/leaderboard?limit=${limit}`);\n  }\n};\n\n// User API\nexport const userAPI = {\n  getUserStats: async token => {\n    return api.get('/game/stats', {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  },\n  updateProfile: async (profileData, token) => {\n    return api.put('/auth/profile', profileData, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n};\n\n// Words API\nexport const wordsAPI = {\n  getWords: async (params = {}) => {\n    const queryParams = new URLSearchParams(params);\n    return api.get(`/words?${queryParams}`);\n  },\n  getWordById: async id => {\n    return api.get(`/words/${id}`);\n  },\n  getWordStats: async () => {\n    return api.get('/words/stats/overview');\n  }\n};\n\n// Health check\nexport const healthAPI = {\n  check: async () => {\n    return api.get('/health');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","_error$response","status","console","log","authAPI","login","email","password","post","register","username","gameAPI","startGame","gameConfig","token","Authorization","submitAnswer","sessionId","questionId","answer","timeSpent","completeGame","getGameHistory","page","limit","gameType","params","URLSearchParams","append","get","getLeaderboard","userAPI","getUserStats","updateProfile","profileData","put","wordsAPI","getWords","queryParams","getWordById","id","getWordStats","healthAPI","check"],"sources":["C:/Users/sanga/Desktop/App/Mobile/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base configuration\r\nconst BASE_URL = 'http://10.0.2.2:3000/api'; // For Android emulator\r\n// const BASE_URL = 'http://localhost:3000/api'; // For iOS simulator\r\n\r\nconst api = axios.create({\r\n  baseURL: BASE_URL,\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    // Token will be added by individual API calls\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Handle unauthorized access\r\n      console.log('Unauthorized access - token may be expired');\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  login: async (email, password) => {\r\n    return api.post('/auth/login', { email, password });\r\n  },\r\n  \r\n  register: async (username, email, password) => {\r\n    return api.post('/auth/register', { username, email, password });\r\n  },\r\n};\r\n\r\n// Game API\r\nexport const gameAPI = {\r\n  startGame: async (gameConfig, token) => {\r\n    return api.post('/game/start-game', gameConfig, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n  },\r\n  \r\n  submitAnswer: async (sessionId, questionId, answer, timeSpent, token) => {\r\n    return api.post('/game/submit-answer', {\r\n      sessionId,\r\n      questionId,\r\n      answer,\r\n      timeSpent\r\n    }, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n  },\r\n  \r\n  completeGame: async (sessionId, token) => {\r\n    return api.post('/game/complete-game', { sessionId }, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n  },\r\n  \r\n  getGameHistory: async (page, limit, gameType, token) => {\r\n    const params = new URLSearchParams({ page, limit });\r\n    if (gameType) params.append('gameType', gameType);\r\n    \r\n    return api.get(`/game/history?${params}`, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n  },\r\n  \r\n  getLeaderboard: async (limit = 10) => {\r\n    return api.get(`/game/leaderboard?limit=${limit}`);\r\n  },\r\n};\r\n\r\n// User API\r\nexport const userAPI = {\r\n  getUserStats: async (token) => {\r\n    return api.get('/game/stats', {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n  },\r\n  \r\n  updateProfile: async (profileData, token) => {\r\n    return api.put('/auth/profile', profileData, {\r\n      headers: { Authorization: `Bearer ${token}` }\r\n    });\r\n  },\r\n};\r\n\r\n// Words API\r\nexport const wordsAPI = {\r\n  getWords: async (params = {}) => {\r\n    const queryParams = new URLSearchParams(params);\r\n    return api.get(`/words?${queryParams}`);\r\n  },\r\n  \r\n  getWordById: async (id) => {\r\n    return api.get(`/words/${id}`);\r\n  },\r\n  \r\n  getWordStats: async () => {\r\n    return api.get('/words/stats/overview');\r\n  },\r\n};\r\n\r\n// Health check\r\nexport const healthAPI = {\r\n  check: async () => {\r\n    return api.get('/health');\r\n  },\r\n};\r\n\r\nexport default api;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _taggedTemplateLiteral from\"C:/Users/sanga/AppData/Roaming/npm/node_modules/react-scripts/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState,useEffect}from'react';import{motion}from'framer-motion';import styled from'styled-components';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MatchContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  gap: 1.5rem;\\n\"])));const OptionsGrid=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: 1fr 1fr;\\n  gap: 1rem;\\n\"])));const OptionCard=styled(motion.div)(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  background: \",\";\\n  color: \",\";\\n  padding: 1.5rem;\\n  border-radius: 15px;\\n  cursor: pointer;\\n  text-align: center;\\n  font-weight: bold;\\n  font-size: 1.1rem;\\n  border: 2px solid transparent;\\n  transition: all 0.3s ease;\\n  min-height: 80px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\\n  &:hover {\\n    border-color: #667eea;\\n    transform: translateY(-2px);\\n  }\\n\"])),props=>{if(props.selected)return'#667eea';if(props.matched)return'#4CAF50';if(props.wrong)return'#f44336';return'#f8f9fa';},props=>{if(props.selected||props.matched||props.wrong)return'white';return'#333';});const SubmitButton=styled(motion.button)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n  color: white;\\n  border: none;\\n  padding: 1rem 2rem;\\n  border-radius: 25px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  font-size: 1.1rem;\\n  margin-top: 1rem;\\n\\n  &:disabled {\\n    opacity: 0.6;\\n    cursor: not-allowed;\\n  }\\n\"])));const MatchGame=_ref=>{let{question,onSubmit}=_ref;const[selectedOptions,setSelectedOptions]=useState([]);const[matchedPairs,setMatchedPairs]=useState([]);const[wrongPairs,setWrongPairs]=useState([]);const[isSubmitted,setIsSubmitted]=useState(false);// Parse the question to extract Tamil and English options\nconst parseQuestion=()=>{const isTamilToEnglish=question.question.includes('Tamil word');const correctAnswer=question.correctAnswer;// For match games, we need to create pairs\n// This is a simplified version - in a real app, you'd have more sophisticated parsing\nconst options=[];if(isTamilToEnglish){var _question$question$ma;// Tamil word to English meaning\noptions.push({id:'tamil',text:((_question$question$ma=question.question.match(/\"([^\"]+)\"/))===null||_question$question$ma===void 0?void 0:_question$question$ma[1])||'Tamil Word',type:'tamil'});options.push({id:'english',text:correctAnswer,type:'english'});}else{var _question$question$ma2;// English meaning to Tamil word\noptions.push({id:'english',text:((_question$question$ma2=question.question.match(/\"([^\"]+)\"/))===null||_question$question$ma2===void 0?void 0:_question$question$ma2[1])||'English Meaning',type:'english'});options.push({id:'tamil',text:correctAnswer,type:'tamil'});}return options;};const options=parseQuestion();const handleOptionClick=option=>{if(isSubmitted)return;setSelectedOptions(prev=>{if(prev.includes(option.id)){return prev.filter(id=>id!==option.id);}else if(prev.length<2){return[...prev,option.id];}else{// Replace the first selection\nreturn[prev[1],option.id];}});};const handleSubmit=()=>{if(selectedOptions.length!==2)return;setIsSubmitted(true);// Check if the selected pair is correct\nconst isCorrect=selectedOptions.includes('tamil')&&selectedOptions.includes('english');if(isCorrect){setMatchedPairs(selectedOptions);setTimeout(()=>{onSubmit(question.correctAnswer);},1000);}else{setWrongPairs(selectedOptions);setTimeout(()=>{onSubmit('wrong');},1000);}};const getOptionState=option=>{if(matchedPairs.includes(option.id))return'matched';if(wrongPairs.includes(option.id))return'wrong';if(selectedOptions.includes(option.id))return'selected';return'default';};return/*#__PURE__*/_jsxs(MatchContainer,{children:[/*#__PURE__*/_jsx(OptionsGrid,{children:options.map(option=>/*#__PURE__*/_jsx(OptionCard,{selected:selectedOptions.includes(option.id),matched:matchedPairs.includes(option.id),wrong:wrongPairs.includes(option.id),onClick:()=>handleOptionClick(option),whileHover:{scale:1.02},whileTap:{scale:0.98},children:option.text},option.id))}),/*#__PURE__*/_jsx(SubmitButton,{onClick:handleSubmit,disabled:selectedOptions.length!==2||isSubmitted,whileHover:{scale:1.05},whileTap:{scale:0.95},children:isSubmitted?'Checking...':'Submit Match'})]});};export default MatchGame;","map":{"version":3,"names":["React","useState","useEffect","motion","styled","jsx","_jsx","jsxs","_jsxs","MatchContainer","div","_templateObject","_taggedTemplateLiteral","OptionsGrid","_templateObject2","OptionCard","_templateObject3","props","selected","matched","wrong","SubmitButton","button","_templateObject4","MatchGame","_ref","question","onSubmit","selectedOptions","setSelectedOptions","matchedPairs","setMatchedPairs","wrongPairs","setWrongPairs","isSubmitted","setIsSubmitted","parseQuestion","isTamilToEnglish","includes","correctAnswer","options","_question$question$ma","push","id","text","match","type","_question$question$ma2","handleOptionClick","option","prev","filter","length","handleSubmit","isCorrect","setTimeout","getOptionState","children","map","onClick","whileHover","scale","whileTap","disabled"],"sources":["C:/Users/sanga/Desktop/App/Mobile/src/components/games/MatchGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport styled from 'styled-components';\n\nconst MatchContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n`;\n\nconst OptionsGrid = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 1rem;\n`;\n\nconst OptionCard = styled(motion.div)`\n  background: ${props => {\n    if (props.selected) return '#667eea';\n    if (props.matched) return '#4CAF50';\n    if (props.wrong) return '#f44336';\n    return '#f8f9fa';\n  }};\n  color: ${props => {\n    if (props.selected || props.matched || props.wrong) return 'white';\n    return '#333';\n  }};\n  padding: 1.5rem;\n  border-radius: 15px;\n  cursor: pointer;\n  text-align: center;\n  font-weight: bold;\n  font-size: 1.1rem;\n  border: 2px solid transparent;\n  transition: all 0.3s ease;\n  min-height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  &:hover {\n    border-color: #667eea;\n    transform: translateY(-2px);\n  }\n`;\n\nconst SubmitButton = styled(motion.button)`\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  color: white;\n  border: none;\n  padding: 1rem 2rem;\n  border-radius: 25px;\n  font-weight: bold;\n  cursor: pointer;\n  font-size: 1.1rem;\n  margin-top: 1rem;\n\n  &:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n`;\n\nconst MatchGame = ({ question, onSubmit }) => {\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [matchedPairs, setMatchedPairs] = useState([]);\n  const [wrongPairs, setWrongPairs] = useState([]);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Parse the question to extract Tamil and English options\n  const parseQuestion = () => {\n    const isTamilToEnglish = question.question.includes('Tamil word');\n    const correctAnswer = question.correctAnswer;\n    \n    // For match games, we need to create pairs\n    // This is a simplified version - in a real app, you'd have more sophisticated parsing\n    const options = [];\n    \n    if (isTamilToEnglish) {\n      // Tamil word to English meaning\n      options.push({\n        id: 'tamil',\n        text: question.question.match(/\"([^\"]+)\"/)?.[1] || 'Tamil Word',\n        type: 'tamil'\n      });\n      options.push({\n        id: 'english',\n        text: correctAnswer,\n        type: 'english'\n      });\n    } else {\n      // English meaning to Tamil word\n      options.push({\n        id: 'english',\n        text: question.question.match(/\"([^\"]+)\"/)?.[1] || 'English Meaning',\n        type: 'english'\n      });\n      options.push({\n        id: 'tamil',\n        text: correctAnswer,\n        type: 'tamil'\n      });\n    }\n\n    return options;\n  };\n\n  const options = parseQuestion();\n\n  const handleOptionClick = (option) => {\n    if (isSubmitted) return;\n\n    setSelectedOptions(prev => {\n      if (prev.includes(option.id)) {\n        return prev.filter(id => id !== option.id);\n      } else if (prev.length < 2) {\n        return [...prev, option.id];\n      } else {\n        // Replace the first selection\n        return [prev[1], option.id];\n      }\n    });\n  };\n\n  const handleSubmit = () => {\n    if (selectedOptions.length !== 2) return;\n\n    setIsSubmitted(true);\n    \n    // Check if the selected pair is correct\n    const isCorrect = selectedOptions.includes('tamil') && selectedOptions.includes('english');\n    \n    if (isCorrect) {\n      setMatchedPairs(selectedOptions);\n      setTimeout(() => {\n        onSubmit(question.correctAnswer);\n      }, 1000);\n    } else {\n      setWrongPairs(selectedOptions);\n      setTimeout(() => {\n        onSubmit('wrong');\n      }, 1000);\n    }\n  };\n\n  const getOptionState = (option) => {\n    if (matchedPairs.includes(option.id)) return 'matched';\n    if (wrongPairs.includes(option.id)) return 'wrong';\n    if (selectedOptions.includes(option.id)) return 'selected';\n    return 'default';\n  };\n\n  return (\n    <MatchContainer>\n      <OptionsGrid>\n        {options.map((option) => (\n          <OptionCard\n            key={option.id}\n            selected={selectedOptions.includes(option.id)}\n            matched={matchedPairs.includes(option.id)}\n            wrong={wrongPairs.includes(option.id)}\n            onClick={() => handleOptionClick(option)}\n            whileHover={{ scale: 1.02 }}\n            whileTap={{ scale: 0.98 }}\n          >\n            {option.text}\n          </OptionCard>\n        ))}\n      </OptionsGrid>\n\n      <SubmitButton\n        onClick={handleSubmit}\n        disabled={selectedOptions.length !== 2 || isSubmitted}\n        whileHover={{ scale: 1.05 }}\n        whileTap={{ scale: 0.95 }}\n      >\n        {isSubmitted ? 'Checking...' : 'Submit Match'}\n      </SubmitButton>\n    </MatchContainer>\n  );\n};\n\nexport default MatchGame;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}